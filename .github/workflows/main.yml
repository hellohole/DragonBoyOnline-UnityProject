name: Tạo dự án Unity Ngọc Rồng từ file ZIP

on:
  workflow_dispatch:
    inputs:
      zip_file_path:
        description: 'Đường dẫn tới file ZIP (ví dụ: DragonBoyOnline.zip)'
        required: true
        default: 'DragonBoyOnline.zip'

jobs:
  main:
    runs-on: windows-latest

    steps:
    # --- Lấy mã nguồn từ repository ---
    - name: Checkout repository
      uses: actions/checkout@v4

    # --- Kiểm tra file ZIP tồn tại ---
    - name: Kiểm tra file ZIP tồn tại
      run: |
        if (-Not (Test-Path "${{ github.event.inputs.zip_file_path }}")) {
          Write-Error "File ZIP không tồn tại: ${{ github.event.inputs.zip_file_path }}"
          exit 1
        }

    # --- Giải nén file ZIP ---
    - name: Giải nén DragonBoyOnline.zip
      run: Expand-Archive -Path "${{ github.event.inputs.zip_file_path }}" -DestinationPath DragonBoyOnline

    # --- Tải và giải nén AssemblyCSharpPreprocessor ---
    - name: Tải AssemblyCSharpPreprocessor
      uses: dawidd6/action-download-artifact@v6
      with:
        name: AssemblyCSharpPreprocessor
        repo: ElectroHeavenVN/Dragonboy-CommunityMod-Builds
        github_token: ${{ secrets.GITHUB_TOKEN }}
        workflow: build-asmpre.yml
        workflow_conclusion: success
        allow_forks: false
        skip_unpack: true

    - name: Giải nén AssemblyCSharpPreprocessor
      run: Expand-Archive -Path AssemblyCSharpPreprocessor.zip -DestinationPath AssemblyCSharpPreprocessor

    - name: Chạy AssemblyCSharpPreprocessor
      run: |
        $assemblyCSharp = Get-ChildItem -Path DragonBoyOnline -Filter Assembly-CSharp.dll -Recurse -ErrorAction Stop
        AssemblyCSharpPreprocessor/AssemblyCSharpPreprocessor.exe $assemblyCSharp.FullName -d -r -o
        Remove-Item -Force "$($assemblyCSharp.Directory.FullName)\Assembly-CSharp-original.dll"

    # --- Tải và giải nén AssetRipper ---
    - name: Tải AssetRipper.CLI
      uses: dawidd6/action-download-artifact@v6
      with:
        name: AssetRipper.CLI
        repo: ElectroHeavenVN/AssetRipper
        github_token: ${{ secrets.GITHUB_TOKEN }}
        workflow: publish-cli.yml
        workflow_conclusion: success
        branch: master
        allow_forks: false
        skip_unpack: true

    - name: Giải nén AssetRipper.CLI
      run: Expand-Archive -Path AssetRipper.CLI.zip -DestinationPath AssetRipper.CLI

    - name: Tạo dự án Unity từ DragonBoyOnline
      run: AssetRipper.CLI/AssetRipper.CLI.exe DragonBoyOnline DBO-UnityProject

    # --- Cài đặt và chạy ILSpy để dịch ngược mã ---
    - name: Cài đặt ilspycmd
      run: dotnet tool install ilspycmd -g

    - name: Dịch ngược Assembly-CSharp.dll
      run: |
        $assemblyCSharpPath = (Get-ChildItem -Path DragonBoyOnline -Filter Assembly-CSharp.dll -Recurse -ErrorAction Stop).FullName
        ilspycmd -p -lv CSharp7_3 --nested-directories -o decompiled-code $assemblyCSharpPath

    # --- Di chuyển mã đã dịch ngược vào thư mục dự án Unity ---
    - name: Di chuyển mã nguồn đã dịch ngược vào Assets
      run: |
        Remove-Item -Recurse -Force decompiled-code\Assembly-CSharp.csproj -ErrorAction SilentlyContinue
        foreach ($file in Get-ChildItem -Path decompiled-code\* -Recurse -File) {
          $relativePath = $file.FullName.Substring($file.FullName.IndexOf("decompiled-code") + 16)
          $destination = "DBO-UnityProject\ExportedProject\Assets\Scripts\Assembly-CSharp\$relativePath"
          $destinationDir = Split-Path -Parent $destination
          if (-not (Test-Path $destinationDir)) {
            New-Item -ItemType Directory -Path $destinationDir -Force | Out-Null
          }
          Move-Item $file.FullName -Destination $destination -Force
        }

    # --- Upload kết quả làm artifact ---
    - name: Upload artifact dự án Unity
      uses: actions/upload-artifact@v4
      with:
        name: DBO-UnityProject
        path: DBO-UnityProject\ExportedProject
